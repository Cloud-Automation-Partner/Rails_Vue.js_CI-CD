name: "Ruby on Rails CI"
on:
  # push:
  #   branches:
  #     - master
  pull_request:
    branches:
      - master
    types:
      - closed
  workflow_dispatch:
env:
  RUBY_VERSION: 3.0
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: bin/rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }} #Change this to your Ruby version
          
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true
      # Add or replace any other lints here
      # - name: Security audit dependencies
      #   run: bin/bundler-audit --update
      - name: Install Bundler
        run: gem install bundler
      - name: Install Dependencies
        run: bundle install
      - name: Install Brakeman
        run: gem install brakeman rubocop rubocop-rails rubocop-rspec
      - name: Security audit application code
        run: brakeman --no-exit-on-warn 
      - name: Lint Ruby files
        run: rubocop --parallel

  check-status:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Check test and lint status
        run: echo "Both test and lint jobs were successful."
